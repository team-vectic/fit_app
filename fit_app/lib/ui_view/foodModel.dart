class Autogenerated {
  List<Branded> branded;
  List<Common> common;

  Autogenerated({this.branded, this.common});

  Autogenerated.fromJson(Map<String, dynamic> json) {
    if (json['branded'] != null) {
      branded = [];
      json['branded'].forEach((v) {
        branded.add(Branded.fromJson(v));
      });
    }

    if (json['common'] != null) {
      common = [];
      json['common'].forEach((v) {
        common.add(Common.fromJson(v));
      });
    }
  }

  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    if (this.branded != null) {
      data['branded'] = this.branded.map((v) => v.toJson()).toList();
    }

    if (this.common != null) {
      data['common'] = this.common.map((v) => v.toJson()).toList();
    }
    return data;
  }
}

class Branded {
  String foodName;
  String image;
  String servingUnit;
  String nixBrandId;
  String brandNameItemName;
  dynamic servingQty;
  dynamic nfCalories;
  String brandName;
  dynamic brandType;
  String nixItemId;

  Branded(
      {this.foodName,
      this.image,
      this.servingUnit,
      this.nixBrandId,
      this.brandNameItemName,
      this.servingQty,
      this.nfCalories,
      this.brandName,
      this.brandType,
      this.nixItemId});

  Branded.fromJson(Map<String, dynamic> json) {
    foodName = json['food_name'];
    image = json['image'];
    servingUnit = json['serving_unit'];
    nixBrandId = json['nix_brand_id'];
    brandNameItemName = json['brand_name_item_name'];
    servingQty = json['serving_qty'];
    nfCalories = json['nf_calories'];
    brandName = json['brand_name'];
    brandType = json['brand_type'];
    nixItemId = json['nix_item_id'];
  }

  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['food_name'] = this.foodName;
    data['image'] = this.image;
    data['serving_unit'] = this.servingUnit;
    data['nix_brand_id'] = this.nixBrandId;
    data['brand_name_item_name'] = this.brandNameItemName;
    data['serving_qty'] = this.servingQty;
    data['nf_calories'] = this.nfCalories;
    data['brand_name'] = this.brandName;
    data['brand_type'] = this.brandType;
    data['nix_item_id'] = this.nixItemId;
    return data;
  }
}

class Self {
  String foodName;
  String servingUnit;
  Null nixBrandId;
  double servingQty;
  double nfCalories;
  Null brandName;
  String uuid;
  Null nixItemId;

  Self(
      {this.foodName,
      this.servingUnit,
      this.nixBrandId,
      this.servingQty,
      this.nfCalories,
      this.brandName,
      this.uuid,
      this.nixItemId});

  Self.fromJson(Map<String, dynamic> json) {
    foodName = json['food_name'];
    servingUnit = json['serving_unit'];
    nixBrandId = json['nix_brand_id'];
    servingQty = json['serving_qty'];
    nfCalories = json['nf_calories'];
    brandName = json['brand_name'];
    uuid = json['uuid'];
    nixItemId = json['nix_item_id'];
  }

  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['food_name'] = this.foodName;
    data['serving_unit'] = this.servingUnit;
    data['nix_brand_id'] = this.nixBrandId;
    data['serving_qty'] = this.servingQty;
    data['nf_calories'] = this.nfCalories;
    data['brand_name'] = this.brandName;
    data['uuid'] = this.uuid;
    data['nix_item_id'] = this.nixItemId;
    return data;
  }
}

class Common {
  String foodName;
  String image;
  String tagId;
  String tagName;

  Common({this.foodName, this.image, this.tagId, this.tagName});

  Common.fromJson(Map<String, dynamic> json) {
    foodName = json['food_name'];
    image = json['image'];
    tagId = json['tag_id'];
    tagName = json['tag_name'];
  }

  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['food_name'] = this.foodName;
    data['image'] = this.image;
    data['tag_id'] = this.tagId;
    data['tag_name'] = this.tagName;
    return data;
  }
}

class FoodData {
  List<Foods> foods;

  FoodData({this.foods});

  FoodData.fromJson(Map<String, dynamic> json) {
    if (json['foods'] != null) {
      foods = <Foods>[];
      json['foods'].forEach((v) {
        foods.add(Foods.fromJson(v));
      });
    }
  }

  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    if (this.foods != null) {
      data['foods'] = this.foods.map((v) => v.toJson()).toList();
    }
    return data;
  }
}

class Foods {
  String foodName;
  Null brandName;
  num servingQty;
  String servingUnit;
  num servingWeightGrams;
  num nfCalories;
  num nfTotalFat;
  num nfSaturatedFat;
  num nfCholesterol;
  num nfSodium;
  num nfTotalCarbohydrate;
  num nfDietaryFiber;
  num nfSugars;
  num nfProtein;
  num nfPotassium;
  num nfP;
  List<FullNutrients> fullNutrients;
  /*
  Null nixBrandName;
  Null nixBrandId;
  Null nixItemName;
  Null nixItemId;
  Null upc;
  */
  String consumedAt;
  Metadata metadata;
  int source;
  int ndbNo;
  Tags tags;
  List<AltMeasures> altMeasures;
  /*
  Null lat;
  Null lng;
  */
  int mealType;
  Photo photo;
  Null subRecipe;

  Foods(
      {this.foodName,
      this.brandName,
      this.servingQty,
      this.servingUnit,
      this.servingWeightGrams,
      this.nfCalories,
      this.nfTotalFat,
      this.nfSaturatedFat,
      this.nfCholesterol,
      this.nfSodium,
      this.nfTotalCarbohydrate,
      this.nfDietaryFiber,
      this.nfSugars,
      this.nfProtein,
      this.nfPotassium,
      this.nfP,
      this.fullNutrients,
      // this.nixBrandName,
      // this.nixBrandId,
      // this.nixItemName,
      // this.nixItemId,
      // this.upc,
      this.consumedAt,
      this.metadata,
      this.source,
      this.ndbNo,
      this.tags,
      this.altMeasures,
      // this.lat,
      // this.lng,
      this.mealType,
      this.photo,
      this.subRecipe});

  Foods.fromJson(Map<String, dynamic> json) {
    foodName = json['food_name'];
    brandName = json['brand_name'];
    servingQty = json['serving_qty'];
    servingUnit = json['serving_unit'];
    servingWeightGrams = json['serving_weight_grams'];
    nfCalories = json['nf_calories'];
    nfTotalFat = json['nf_total_fat'];
    nfSaturatedFat = json['nf_saturated_fat'];
    nfCholesterol = json['nf_cholesterol'];
    nfSodium = json['nf_sodium'];
    nfTotalCarbohydrate = json['nf_total_carbohydrate'];
    nfDietaryFiber = json['nf_dietary_fiber'];
    nfSugars = json['nf_sugars'];
    nfProtein = json['nf_protein'];
    nfPotassium = json['nf_potassium'];
    nfP = json['nf_p'];
    if (json['full_nutrients'] != null) {
      fullNutrients = <FullNutrients>[];
      json['full_nutrients'].forEach((v) {
        fullNutrients.add(FullNutrients.fromJson(v));
      });
    }
    // nixBrandName = json['nix_brand_name'];
    // nixBrandId = json['nix_brand_id'];
    // nixItemName = json['nix_item_name'];
    // nixItemId = json['nix_item_id'];
    // upc = json['upc'];
    consumedAt = json['consumed_at'];
    metadata =
        json['metadata'] != null ? Metadata.fromJson(json['metadata']) : null;
    source = json['source'];
    ndbNo = json['ndb_no'];
    tags = json['tags'] != null ? Tags.fromJson(json['tags']) : null;
    if (json['alt_measures'] != null) {
      altMeasures = <AltMeasures>[];
      json['alt_measures'].forEach((v) {
        altMeasures.add(AltMeasures.fromJson(v));
      });
    }
    // lat = json['lat'];
    // lng = json['lng'];
    mealType = json['meal_type'];
    photo = json['photo'] != null ? Photo.fromJson(json['photo']) : null;
    subRecipe = json['sub_recipe'];
  }

  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['food_name'] = this.foodName;
    data['brand_name'] = this.brandName;
    data['serving_qty'] = this.servingQty;
    data['serving_unit'] = this.servingUnit;
    data['serving_weight_grams'] = this.servingWeightGrams;
    data['nf_calories'] = this.nfCalories;
    data['nf_total_fat'] = this.nfTotalFat;
    data['nf_saturated_fat'] = this.nfSaturatedFat;
    data['nf_cholesterol'] = this.nfCholesterol;
    data['nf_sodium'] = this.nfSodium;
    data['nf_total_carbohydrate'] = this.nfTotalCarbohydrate;
    data['nf_dietary_fiber'] = this.nfDietaryFiber;
    data['nf_sugars'] = this.nfSugars;
    data['nf_protein'] = this.nfProtein;
    data['nf_potassium'] = this.nfPotassium;
    data['nf_p'] = this.nfP;
    if (this.fullNutrients != null) {
      data['full_nutrients'] =
          this.fullNutrients.map((v) => v.toJson()).toList();
    }
    // data['nix_brand_name'] = this.nixBrandName;
    // data['nix_brand_id'] = this.nixBrandId;
    // data['nix_item_name'] = this.nixItemName;
    // data['nix_item_id'] = this.nixItemId;
    // data['upc'] = this.upc;
    data['consumed_at'] = this.consumedAt;
    if (this.metadata != null) {
      data['metadata'] = this.metadata.toJson();
    }
    data['source'] = this.source;
    data['ndb_no'] = this.ndbNo;
    if (this.tags != null) {
      data['tags'] = this.tags.toJson();
    }
    if (this.altMeasures != null) {
      data['alt_measures'] = this.altMeasures.map((v) => v.toJson()).toList();
    }
    // data['lat'] = this.lat;
    // data['lng'] = this.lng;
    data['meal_type'] = this.mealType;
    if (this.photo != null) {
      data['photo'] = this.photo.toJson();
    }
    data['sub_recipe'] = this.subRecipe;
    return data;
  }
}

class FullNutrients {
  num attrId;
  num value;

  FullNutrients({this.attrId, this.value});

  FullNutrients.fromJson(Map<String, dynamic> json) {
    attrId = json['attr_id'];
    value = json['value'];
  }

  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['attr_id'] = this.attrId;
    data['value'] = this.value;
    return data;
  }
}

class Metadata {
  bool isRawFood;

  Metadata({this.isRawFood});

  Metadata.fromJson(Map<String, dynamic> json) {
    isRawFood = json['is_raw_food'];
  }

  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['is_raw_food'] = this.isRawFood;
    return data;
  }
}

class Tags {
  String item;
  Null measure;
  String quantity;
  int foodGroup;
  int tagId;

  Tags({this.item, this.measure, this.quantity, this.foodGroup, this.tagId});

  Tags.fromJson(Map<String, dynamic> json) {
    item = json['item'];
    measure = json['measure'];
    quantity = json['quantity'];
    foodGroup = json['food_group'];
    tagId = json['tag_id'];
  }

  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['item'] = this.item;
    data['measure'] = this.measure;
    data['quantity'] = this.quantity;
    data['food_group'] = this.foodGroup;
    data['tag_id'] = this.tagId;
    return data;
  }
}

class AltMeasures {
  num servingWeight;
  String measure;
  num seq;
  num qty;

  AltMeasures({this.servingWeight, this.measure, this.seq, this.qty});

  AltMeasures.fromJson(Map<String, dynamic> json) {
    servingWeight = json['serving_weight'];
    measure = json['measure'];
    seq = json['seq'];
    qty = json['qty'];
  }

  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['serving_weight'] = this.servingWeight;
    data['measure'] = this.measure;
    data['seq'] = this.seq;
    data['qty'] = this.qty;
    return data;
  }
}

class Photo {
  String thumb;
  String highres;
  bool isUserUploaded;

  Photo({this.thumb, this.highres, this.isUserUploaded});

  Photo.fromJson(Map<String, dynamic> json) {
    thumb = json['thumb'];
    highres = json['highres'];
    isUserUploaded = json['is_user_uploaded'];
  }

  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['thumb'] = this.thumb;
    data['highres'] = this.highres;
    data['is_user_uploaded'] = this.isUserUploaded;
    return data;
  }
}
